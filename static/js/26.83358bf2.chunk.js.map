{"version":3,"file":"static/js/26.83358bf2.chunk.js","mappings":"2MACA,GAAiB,E,6BCIJA,EAAe,WAC1B,OAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAgCJ,EAAAA,EAAAA,UAAS,IAAzC,eAAOK,EAAP,KAAiBC,EAAjB,KAEMC,GAAWC,EAAAA,EAAAA,MAEXC,EAAe,SAAAC,GAGnB,MAAwBA,EAAEC,cAAlBV,EAAR,EAAQA,KAAMW,EAAd,EAAcA,MAED,SAATX,GAAiBC,EAAQU,GAEhB,UAATX,GAAkBG,EAASQ,GAElB,aAATX,GAAqBK,EAAYM,EACtC,EAgBKC,EAAQ,WACZX,EAAQ,IACRE,EAAS,IACTE,EAAY,GACb,EAED,OACE,kBAAMQ,UAAWC,EAAAA,KAAUC,SArBR,SAAAN,GACnBA,EAAEO,iBAEFV,GACEW,EAAAA,EAAAA,IAAS,CACPjB,KAAAA,EACAE,MAAAA,EACAE,SAAAA,KAIJQ,GACD,EASoDM,aAAa,MAAhE,WACE,mBAAOL,UAAWC,EAAAA,MAAlB,sBAEE,kBAAOK,KAAK,OAAOnB,KAAK,OAAOoB,SAAUZ,EAAcG,MAAOX,QAEhE,mBAAOa,UAAWC,EAAAA,MAAlB,mBAEE,kBACEK,KAAK,QACLnB,KAAK,QACLoB,SAAUZ,EACVG,MAAOT,QAGX,mBAAOW,UAAWC,EAAAA,MAAlB,sBAEE,kBACEK,KAAK,WACLnB,KAAK,WACLoB,SAAUZ,EACVG,MAAOP,QAGX,mBAAQe,KAAK,SAAb,wBAGL,E,UC1DD,EAViB,WACf,OACE,4BACE,SAACE,EAAA,EAAD,WACE,+CAEF,SAACvB,EAAD,MAGL,C","sources":["components/RegisterForm/RegisterForm.module.css","components/RegisterForm/RegisterForm.jsx","pages/Register.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {};","import { useDispatch } from 'react-redux';\nimport css from './RegisterForm.module.css';\nimport { register } from 'redux/auth/operation';\nimport { useState } from 'react';\n\nexport const RegisterForm = () => {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const dispatch = useDispatch();\n\n  const handleChange = e => {\n    //   при введении данных в инпут записываем эти значения в качестве свойств и их значений\n\n    const { name, value } = e.currentTarget;\n\n    if (name === 'name') setName(value);\n\n    if (name === 'email') setEmail(value);\n\n    if (name === 'password') setPassword(value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    dispatch(\n      register({\n        name,\n        email,\n        password,\n      })\n    );\n\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setEmail('');\n    setPassword('');\n  };\n\n  return (\n    <form className={css.form} onSubmit={handleSubmit} autoComplete=\"off\">\n      <label className={css.label}>\n        Username\n        <input type=\"text\" name=\"name\" onChange={handleChange} value={name} />\n      </label>\n      <label className={css.label}>\n        Email\n        <input\n          type=\"email\"\n          name=\"email\"\n          onChange={handleChange}\n          value={email}\n        />\n      </label>\n      <label className={css.label}>\n        Password\n        <input\n          type=\"password\"\n          name=\"password\"\n          onChange={handleChange}\n          value={password}\n        />\n      </label>\n      <button type=\"submit\">Register</button>\n    </form>\n  );\n};\n","import { RegisterForm } from 'components/RegisterForm/RegisterForm';\nimport { Helmet } from 'react-helmet';\n\nconst Register = () => {\n  return (\n    <div>\n      <Helmet>\n        <title>Registration</title>\n      </Helmet>\n      <RegisterForm />\n    </div>\n  );\n};\nexport default Register;\n"],"names":["RegisterForm","useState","name","setName","email","setEmail","password","setPassword","dispatch","useDispatch","handleChange","e","currentTarget","value","reset","className","css","onSubmit","preventDefault","register","autoComplete","type","onChange","Helmet"],"sourceRoot":""}