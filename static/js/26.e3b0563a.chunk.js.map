{"version":3,"file":"static/js/26.e3b0563a.chunk.js","mappings":"2MACA,EAAgC,oCAAhC,EAAqF,qCAArF,EAA2I,qCAA3I,EAA+L,mC,6BCIlLA,EAAe,WAC1B,OAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAgCJ,EAAAA,EAAAA,UAAS,IAAzC,eAAOK,EAAP,KAAiBC,EAAjB,KAEMC,GAAWC,EAAAA,EAAAA,MAEXC,EAAe,SAAAC,GAGnB,MAAwBA,EAAEC,cAAlBV,EAAR,EAAQA,KAAMW,EAAd,EAAcA,MAED,SAATX,GAAiBC,EAAQU,GAEhB,UAATX,GAAkBG,EAASQ,GAElB,aAATX,GAAqBK,EAAYM,EACtC,EAgBKC,EAAQ,WACZX,EAAQ,IACRE,EAAS,IACTE,EAAY,GACb,EAED,OACE,kBACEQ,UAAWC,EACXC,SAvBiB,SAAAN,GACnBA,EAAEO,iBAEFV,GACEW,EAAAA,EAAAA,IAAS,CACPjB,KAAAA,EACAE,MAAAA,EACAE,SAAAA,KAIJQ,GACD,EAYGM,aAAa,MAHf,WAKE,mBAAOL,UAAWC,EAAlB,sBAEE,kBACED,UAAWC,EACXK,KAAK,OACLnB,KAAK,OACLoB,SAAUZ,EACVG,MAAOX,QAGX,mBAAOa,UAAWC,EAAlB,mBAEE,kBACED,UAAWC,EACXK,KAAK,QACLnB,KAAK,QACLoB,SAAUZ,EACVG,MAAOT,QAGX,mBAAOW,UAAWC,EAAlB,sBAEE,kBACED,UAAWC,EACXK,KAAK,WACLnB,KAAK,WACLoB,SAAUZ,EACVG,MAAOP,QAGX,mBAAQS,UAAWC,EAAkBK,KAAK,SAA1C,wBAKL,E,UCxED,EAViB,WACf,OACE,4BACE,SAACE,EAAA,EAAD,WACE,+CAEF,SAACvB,EAAD,MAGL,C","sources":["webpack://react-homework-template/./src/components/RegisterForm/RegisterForm.module.css?a5d4","components/RegisterForm/RegisterForm.jsx","pages/Register.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form_register\":\"RegisterForm_form_register__0QVW-\",\"label_register\":\"RegisterForm_label_register__eMODo\",\"input_register\":\"RegisterForm_input_register__IaOmZ\",\"btn_register\":\"RegisterForm_btn_register__YEAAa\"};","import { useDispatch } from 'react-redux';\nimport css from './RegisterForm.module.css';\nimport { register } from 'redux/auth/operation';\nimport { useState } from 'react';\n\nexport const RegisterForm = () => {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const dispatch = useDispatch();\n\n  const handleChange = e => {\n    //   при введении данных в инпут записываем эти значения в качестве свойств и их значений\n\n    const { name, value } = e.currentTarget;\n\n    if (name === 'name') setName(value);\n\n    if (name === 'email') setEmail(value);\n\n    if (name === 'password') setPassword(value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    dispatch(\n      register({\n        name,\n        email,\n        password,\n      })\n    );\n\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setEmail('');\n    setPassword('');\n  };\n\n  return (\n    <form\n      className={css.form_register}\n      onSubmit={handleSubmit}\n      autoComplete=\"off\"\n    >\n      <label className={css.label_register}>\n        Username\n        <input\n          className={css.input_register}\n          type=\"text\"\n          name=\"name\"\n          onChange={handleChange}\n          value={name}\n        />\n      </label>\n      <label className={css.label_register}>\n        Email\n        <input\n          className={css.input_register}\n          type=\"email\"\n          name=\"email\"\n          onChange={handleChange}\n          value={email}\n        />\n      </label>\n      <label className={css.label_register}>\n        Password\n        <input\n          className={css.input_register}\n          type=\"password\"\n          name=\"password\"\n          onChange={handleChange}\n          value={password}\n        />\n      </label>\n      <button className={css.btn_register} type=\"submit\">\n        Register\n      </button>\n    </form>\n  );\n};\n","import { RegisterForm } from 'components/RegisterForm/RegisterForm';\nimport { Helmet } from 'react-helmet';\n\nconst Register = () => {\n  return (\n    <div>\n      <Helmet>\n        <title>Registration</title>\n      </Helmet>\n      <RegisterForm />\n    </div>\n  );\n};\nexport default Register;\n"],"names":["RegisterForm","useState","name","setName","email","setEmail","password","setPassword","dispatch","useDispatch","handleChange","e","currentTarget","value","reset","className","css","onSubmit","preventDefault","register","autoComplete","type","onChange","Helmet"],"sourceRoot":""}