{"version":3,"file":"static/js/465.91d8e2f6.chunk.js","mappings":"4MACA,EAA6B,8BAA7B,EAAyE,+BAAzE,EAAsH,+BAAtH,EAAiK,6B,6BCKpJA,EAAY,WACvB,OAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAgCF,EAAAA,EAAAA,UAAS,IAAzC,eAAOG,EAAP,KAAiBC,EAAjB,KAEA,GAAoCJ,EAAAA,EAAAA,WAAS,GAA7C,eAAOK,EAAP,KAAmBC,EAAnB,KACA,GAA0CN,EAAAA,EAAAA,WAAS,GAAnD,eAAOO,EAAP,KAAsBC,EAAtB,KACA,GAAoCR,EAAAA,EAAAA,UAClC,mDADF,eAAOS,EAAP,KAAmBC,EAAnB,KAGA,GAA0CV,EAAAA,EAAAA,UACxC,sDADF,eAAOW,EAAP,KAAsBC,EAAtB,KAIMC,GAAWC,EAAAA,EAAAA,MAgCXC,EAAc,SAAAC,GAOlB,OANiBA,EAAEC,cAAXC,MAON,IAAK,QACHZ,GAAc,GACd,MACF,IAAK,WACHE,GAAiB,GAItB,EAeKW,EAAQ,WACZjB,EAAS,IACTE,EAAY,GACb,EAED,OACE,kBAAMgB,UAAWC,EAAgBC,SAnBd,SAAAN,GACnBA,EAAEO,iBAEFV,GACEW,EAAAA,EAAAA,IAAM,CACJvB,MAAAA,EACAE,SAAAA,KAIJgB,GACD,EAQ0DM,aAAa,MAAtE,UACGpB,GAAcI,IACb,gBAAKiB,MAAO,CAAEC,MAAO,OAArB,SAA+BlB,KAEjC,mBAAOW,UAAWC,EAAlB,mBAEE,kBACEO,UAAQ,EACRC,OAAQ,SAAAb,GAAC,OAAID,EAAYC,EAAhB,EACTI,UAAWC,EACXS,KAAK,QACLZ,KAAK,QACLa,SA7EmB,SAAAf,GACzB,IAAQgB,EAAUhB,EAAEC,cAAZe,MACR9B,EAAS8B,GAGP,uEACMC,KAAKC,OAAOF,GAAOG,eAGzBzB,EAAc,IAFdA,EAAc,kBAIjB,EAmEOsB,MAAO/B,OAGVM,GAAiBI,IAChB,gBAAKe,MAAO,CAAEC,MAAO,OAArB,SAA+BhB,KAEjC,mBAAOS,UAAWC,EAAlB,sBAEE,kBACEO,UAAQ,EACRC,OAAQ,SAAAb,GAAC,OAAID,EAAYC,EAAhB,EACTI,UAAWC,EACXS,KAAK,WACLZ,KAAK,WACLa,SA7EsB,SAAAf,GAC5B,IAAQgB,EAAUhB,EAAEC,cAAZe,MACR5B,EAAY4B,GACRA,EAAMI,OAAS,GACjBxB,EAAiB,0CACZoB,GACHpB,EAAiB,2CAGnBA,EAAiB,GAEpB,EAmEOoB,MAAO7B,QAGX,mBAAQiB,UAAWC,EAAeS,KAAK,SAAvC,sBAKL,E,UCjHD,EARc,WAMZ,OAJGO,EAAA,GAII,SAACtC,EAAD,GACR,C","sources":["webpack://react-homework-template/./src/components/LoginForm/LoginForm.module.css?4ac5","components/LoginForm/LoginForm.jsx","pages/Login.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form_login\":\"LoginForm_form_login__QlV1l\",\"label_login\":\"LoginForm_label_login__Z+N3b\",\"input_login\":\"LoginForm_input_login__zHQjz\",\"btn_login\":\"LoginForm_btn_login__yTW-D\"};","import { useDispatch } from 'react-redux';\nimport css from './LoginForm.module.css';\nimport { logIn } from 'redux/auth/operation';\nimport { useState } from 'react';\n// import toast from 'react-hot-toast';\n\nexport const LoginForm = () => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const [emailDirty, setEmailDirty] = useState(false);\n  const [passwordDirty, setPasswordDirty] = useState(false);\n  const [emailError, setEmailError] = useState(\n    'Enter the email you entered during registration'\n  );\n  const [passwordError, setPasswordError] = useState(\n    'Enter the password you entered during registration'\n  );\n\n  const dispatch = useDispatch();\n\n  // валидация Email\n\n  const handleEmailValidet = e => {\n    const { value } = e.currentTarget;\n    setEmail(value);\n\n    const re =\n      /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\n    if (!re.test(String(value).toLowerCase())) {\n      setEmailError('Incorrect email');\n    } else {\n      setEmailError('');\n    }\n  };\n\n  // валидация пароля\n\n  const handlePasswordValidet = e => {\n    const { value } = e.currentTarget;\n    setPassword(value);\n    if (value.length < 8) {\n      setPasswordError('Enter password more than 8 charactersl');\n      if (!value) {\n        setPasswordError('Enter password more than 8 charactersl');\n      }\n    } else {\n      setPasswordError('');\n    }\n  };\n\n  const handleValid = e => {\n    const { name } = e.currentTarget;\n\n    // if (name === 'email') setEmailDirty(true);\n    // if (name === 'password') setPasswordDirty(true);\n\n    // через свитч\n    switch (name) {\n      case 'email':\n        setEmailDirty(true);\n        break;\n      case 'password':\n        setPasswordDirty(true);\n        break;\n      default:\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    dispatch(\n      logIn({\n        email,\n        password,\n      })\n    );\n\n    reset();\n  };\n\n  const reset = () => {\n    setEmail('');\n    setPassword('');\n  };\n\n  return (\n    <form className={css.form_login} onSubmit={handleSubmit} autoComplete=\"off\">\n      {emailDirty && emailError && (\n        <div style={{ color: 'red' }}>{emailError}</div>\n      )}\n      <label className={css.label_login}>\n        Email\n        <input\n          required\n          onBlur={e => handleValid(e)}\n          className={css.input_login}\n          type=\"email\"\n          name=\"email\"\n          onChange={handleEmailValidet}\n          value={email}\n        />\n      </label>\n      {passwordDirty && passwordError && (\n        <div style={{ color: 'red' }}>{passwordError}</div>\n      )}\n      <label className={css.label_login}>\n        Password\n        <input\n          required\n          onBlur={e => handleValid(e)}\n          className={css.input_login}\n          type=\"password\"\n          name=\"password\"\n          onChange={handlePasswordValidet}\n          value={password}\n        />\n      </label>\n      <button className={css.btn_login} type=\"submit\">\n        Log In\n      </button>\n    </form>\n  );\n};\n","import { LoginForm } from 'components/LoginForm/LoginForm';\nimport { Helmet } from 'react-helmet';\n\nconst Login = () => {\n  <div>\n    <Helmet>\n      <title>Login</title>\n    </Helmet>\n  </div>;\n  return <LoginForm />;\n};\nexport default Login;\n"],"names":["LoginForm","useState","email","setEmail","password","setPassword","emailDirty","setEmailDirty","passwordDirty","setPasswordDirty","emailError","setEmailError","passwordError","setPasswordError","dispatch","useDispatch","handleValid","e","currentTarget","name","reset","className","css","onSubmit","preventDefault","logIn","autoComplete","style","color","required","onBlur","type","onChange","value","test","String","toLowerCase","length","Helmet"],"sourceRoot":""}